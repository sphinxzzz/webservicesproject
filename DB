Use webservices;

CREATE TABLE Users (
    user_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    role ENUM('user', 'manager') DEFAULT 'user',
    is_azorean BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Tabela de hostels
CREATE TABLE Hostels (
    hostel_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    location ENUM('São Miguel', 'Terceira', 'Faial', 'Pico', 'São Jorge', 'Santa Maria', 'Graciosa', 'Flores', 'Corvo') NOT NULL,
    max_guests INT NOT NULL
);

-- Tabela de quartos
CREATE TABLE Rooms (
    room_id SERIAL PRIMARY KEY,
    hostel_id INT REFERENCES Hostels(hostel_id) ON DELETE CASCADE,
    room_type ENUM('dormitory', 'single', 'suite') NOT NULL,
    is_available BOOLEAN DEFAULT TRUE
);

-- Tabela de reservas
CREATE TABLE Reservations (
    reservation_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Users(user_id) ON DELETE CASCADE,
    room_id INT REFERENCES Rooms(room_id) ON DELETE CASCADE,
    reservation_date DATE NOT NULL,
    is_discount_applied BOOLEAN DEFAULT FALSE,
    total_price DECIMAL(10, 2) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Tabela de avaliações
CREATE TABLE Reviews (
    review_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Users(user_id) ON DELETE SET NULL,
    hostel_id INT REFERENCES Hostels(hostel_id) ON DELETE CASCADE,
    rating INT CHECK (rating BETWEEN 1 AND 5),
    comment TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Índices para otimizar buscas
CREATE INDEX idx_hostel_location ON Hostels(location);
CREATE INDEX idx_room_availability ON Rooms(is_available);
CREATE INDEX idx_user_role ON Users(role);
CREATE INDEX idx_review_rating ON Reviews(rating);
